#!/usr/bin/env node

var
  command = require('commander'),
  glob = require('glob'),
  mkdirp = require('mkdirp'),
  log = require('../lib/log'),
  qfs = require('../lib/qfs')

if (!qfs.is.inAppFolder()) {
  log.fatal('Not in an App folder.')
  // ^^^ EARLY EXIT
}

command
  .usage('<template> <name including subfolder if any>')
  .option('-l, --list', 'List available templates')
  .on('--help', function () {
    log('  Templates are stored in ' + '/templates'.gray)
    log()
    log('  Example:')
    log()
    log('    # get your available Component templates'.gray)
    log('    $ quasar new -l')
    log('    $ quasar new --list')
    log()
    log('    # generate .vue file from a Component template'.gray)
    log('    $ quasar new component Hello')
    log()
    log('    # generate .vue file from a template to a subfolder'.gray)
    log('    $ quasar new layout layout/about/help/Hello')
    log('    # the above creates src/components/layout/about/help/Hello.vue'.gray)
  })
  .parse(process.argv)

if (command.list) {
  log(' Available Component templates:'.gray)
  log()

  glob(qfs.get.root('templates', '*.vue'), function (err, files) {
    if (err) throw err
    files.forEach(function (file) {
      log('    ' + qfs.basename(file, '.vue'))
    })
  })
}
else if (!command.args.length || command.args.length > 2) {
  command.help()
  process.exit(1)
  // ^^^ EARLY EXIT
}
else {
  generate()
}

function generate () {
  var
    type = command.args[0],
    name = command.args[1] + '.vue',
    src = qfs.get.root('templates', type + '.vue'),
    dest = qfs.get.root('src', 'components', name),
    relativeDest = qfs.relative(dest)

  if (!qfs.exists(src)) {
    log.fatal('Template "' + (type + '.vue').gray + '" does not exists.')
    // ^^^ EARLY EXIT
  }

  if (qfs.exists(dest)) {
    log.fatal('There is already a file at ' + relativeDest.gray)
    // ^^^ EARLY EXIT
  }

  mkdirp(qfs.dirname(dest), function (err) {
    if (err) {
      log.fatal('Error creating folder for ' + 'dest'.gray)
      // ^^^ EARLY EXIT
    }

    if (qfs.copy(src, dest)) {
      log.fatal('Error while trying to generate ' + relativeDest.gray)
      // ^^^ EARLY EXIT
    }

    log.success(
      'Generated "' + name.gray + '" from "' + (type + '.vue').gray +
      '" in ' + relativeDest.gray
    )
  })
}
